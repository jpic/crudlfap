version: 2

# https://docs.gitlab.com/ee/ci/yaml/#anchors
.browser_template: &browser_template
  docker:
  - image: circleci/node:9
  - image: yourlabs/crudlfap:$CIRCLE_SHA1
    environment:
      DEBUG: 1
  working_directory: ~/repo
  steps:
  - checkout
  - run:
      name: WAIT runserver
      command: until curl localhost:8000 &> /dev/null; do sleep 1; done
  - run:
      name: add sauce-connect-launcher
      command: npm install sauce-connect-launcher
  - run:
      name: RUN yarn run ${CIRCLE_STAGE}-browser-test
      command: yarn run ${CIRCLE_STAGE}-browser-test

workflows:
  version: 2
  pipeline:
    jobs:
      - docker
      - py-qa
      - docs
      - py36-dj20
      - js-qa
  tagged-build:
    jobs:
      - docker-wait
      - pypi:
          requires: [docker-wait]
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - npm:
          requires: [docker-wait]
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/

# pending refactor
#      - chrome:
#          requires:
#          - docker-build
#      - ie:
#          requires:
#          - docker-build
#          - chrome
#      - firefox:
#          requires:
#          - docker-build
#          - ie
#      - js-lint-nightwatch

jobs:
  docs:
    docker:
    - image: circleci/python:3.6
    steps:
    - checkout
    - restore_cache:
        keys:
        - qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: tox environment setup
        command: |
          set -eux
          curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo pip3 install tox
          sudo npm install -g jsdoc
          tox -r -e docs --notest
    - save_cache:
        paths: [~/.cache/pip]
        key: qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: try docs build
        command: tox -e docs

  py-qa:
    docker:
    - image: circleci/python:3.6
    steps:
    - checkout
    - restore_cache:
        keys:
        - qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -r -e qa --notest
    - save_cache:
        paths: [~/.local, ~/.cache/pip]
        key: qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: run qa checks
        command: ~/.local/bin/tox -e qa

  py36-dj20:
    docker:
    - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - test-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: Tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -r -e py36-dj20 --notest
    - save_cache:
        paths: [~/.local, ~/.cache/pip]
        key: test-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: TEST tox -e py36-dj20
        command: |
          ~/.local/bin/tox -e py36-dj20
          PATH=./.tox/py36-dj20/bin:$PATH codecov -e $TOXENV

  js-qa:
    docker:
    - image: circleci/node:9
    steps:
    - checkout
    - run:
        name: RUN yarn install
        command: cd js && yarn install && yarn run lint

  js-test:
    docker:
    - image: circleci/node:9
    working_directory: ~/repo/src/crudlfap
    steps:
    - checkout
    - run:
        name: RUN yarn install
        command: sudo npm install -g codecov; yarn install
    - run:
        name: RUN yarn test & coverage upload
        command: yarn test && codecov

  docker:
    docker:
    - image: docker:latest
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: DOCKER build
        command: |
          apk add git
          echo 'CIRCLE_TAG="$(git tag -l --points-at HEAD)"' >> $BASH_ENV && . $BASH_ENV
          docker build -t yourlabs/crudlfap:$CIRCLE_SHA1 --build-arg GIT_COMMIT=$CIRCLE_SHA1 --build-arg GIT_TAG=$CIRCLE_TAG .
    - deploy:
        name: DOCKER image push yourlabs/crudlfap:{{ .Branch }} & yourlabs/crudlfap:{{ .Environment.CIRCLE_SHA1 }} tags
        command: |
          set -eux
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push yourlabs/crudlfap:$CIRCLE_SHA1
          docker tag yourlabs/crudlfap:$CIRCLE_SHA1 yourlabs/crudlfap:$CIRCLE_BRANCH
          docker push yourlabs/crudlfap:$CIRCLE_BRANCH
          apk add git
          echo 'CIRCLE_TAG="$(git tag -l --points-at HEAD)"' >> $BASH_ENV && . $BASH_ENV
          if test -n "$CIRCLE_TAG"; then
            docker tag yourlabs/crudlfap:$CIRCLE_SHA1 yourlabs/crudlfap:$CIRCLE_TAG
            docker push yourlabs/crudlfap:$CIRCLE_TAG
          fi

  docker-wait:
    docker:
    - image: docker:latest
    steps:
    - run:
        name: WAIT until docker job in the main pipeline finishes
        command: |
          set -eux
          apk add curl
          until curl --fail https://registry.hub.docker.com/v1/repositories/yourlabs/crudlfap/tags/$CIRCLE_SHA1; do
            sleep 10
          done

  npm:
    docker:
    - image: yourlabs/crudlfap:$CIRCLE_SHA1
    steps:
    - run:
        name: NPM publish
        command: |
          set -eux
          cd # cancel out cci enforcement of being in ~/project
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          NODE_ENV=production yarn publish --cwd js --new-version $GIT_TAG

  pypi:
    docker:
    - image: yourlabs/crudlfap:$CIRCLE_SHA1
    steps:
    - run:
        name: PYPI publish
        command: |
          set -eux
          cd # ~/project does not match docker best practice docs
          python3 setup.py verify
          crudlfap compilemessages -f
          python3 setup.py sdist
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = yourlabs" >> ~/.pypirc
          echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
          pip3 install --user twine
          ~/.local/bin/twine upload dist/*

#  Epending refactor
#   ie:
#     <<: *browser_template
#
#   chrome:
#     <<: *browser_template
#
#   firefox:
#     <<: *browser_template
#
#   js-lint-nightwatch:
#     docker:
#     - image: circleci/node:9
#     working_directory: ~/repo
#     steps:
#     - checkout
#     - run:
#         name: RUN yarn install
#         command: yarn install
#     - run:
#         name: RUN yarn run eslint-nightwatch
#         command: yarn run eslint-nightwatch
