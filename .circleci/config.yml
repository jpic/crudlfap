version: 2

workflows:
  version: 2
  pipeline:
    jobs:
      - py-qa
      - docs
      - py36-dj20
      - js-qa
      - docker-build

jobs:
  docs:
    docker:
    - image: circleci/python:3.6
    steps:
    - checkout
    - restore_cache:
        keys:
        - qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: tox environment setup
        command: |
          set -eux
          curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo pip3 install tox
          sudo npm install -g jsdoc
          tox -r -e docs --notest
    - save_cache:
        paths: [~/.cache/pip]
        key: qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: try docs build
        command: tox -e docs

  py-qa:
    docker:
    - image: circleci/python:3.6
    steps:
    - checkout
    - restore_cache:
        keys:
        - qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -r -e qa --notest
    - save_cache:
        paths: [~/.local, ~/.cache/pip]
        key: qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: run qa checks
        command: ~/.local/bin/tox -e qa

  py36-dj20:
    docker:
    - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - test-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: Tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -r -e py36-dj20 --notest
    - save_cache:
        paths: [~/.local, ~/.cache/pip]
        key: test-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: TEST tox -e py36-dj20
        command: |
          ~/.local/bin/tox -e py36-dj20
          PATH=./.tox/py36-dj20/bin:$PATH codecov -e $TOXENV

  js-qa:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - run:
        name: RUN yarn install
        command: yarn install
    - run:
        name: RUN yarn run lint
        command: yarn run lint

  js-test:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo/src/crudlfap
    steps:
    - checkout
    - run:
        name: RUN yarn install
        command: yarn install
    - run:
        name: RUN yarn test & coverage upload
        command: yarn test && ./node_modules/.bin/codecov

  docker-build:
    docker:
    - image: docker:latest
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: DOCKER build
        command: |
          docker pull yourlabs/crudlfap:$CIRCLE_BRANCH || true
          docker build -t yourlabs/crudlfap:$CIRCLE_SHA1 --build-arg GIT_COMMIT=$CIRCLE_SHA1 .
    - deploy:
        name: DOCKER image push yourlabs/crudlfap:{{ .Branch }} & yourlabs/crudlfap:{{ .Environment.CIRCLE_SHA1 }} tags
        command: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push yourlabs/crudlfap:$CIRCLE_SHA1
          docker tag yourlabs/crudlfap:$CIRCLE_SHA1 yourlabs/crudlfap:$CIRCLE_BRANCH
          docker push yourlabs/crudlfap:$CIRCLE_BRANCH
